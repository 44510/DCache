#include "../JceComm/CacheShare.jce"
#include "./Ret.jce"
module DCache
{
    interface DbAccess
    {
	    //////////////////////////////////////////////////////////
		//一期接口
		/////////////////////////////////////////////////////////
        /**
         *查找key对应的值是多少
	 *C++根据需要实现下面三个接口之一
         */
        int getString(string keyItem, out string value);
        int getInt(int keyItem, out string value);
        int getLong(long keyItem, out string value);
		int getStringExp(string keyItem, out string value, out int expireTime);
        int getIntExp(int keyItem, out string value, out int expireTime);
        int getLongExp(long keyItem, out string value, out int expireTime);

	/**
         *查找key对应的值是多少
	 *JAVA根据需要实现下面三个接口之一
         */
        int getStringBS(vector<byte> keyItem, out vector<byte> value);
        int getIntBS(int keyItem, out vector<byte> value);
        int getLongBS(long keyItem, out vector<byte> value);
        int getStringBSExp(vector<byte> keyItem, out vector<byte> value, out int expireTime);
        int getIntBSExp(int keyItem, out vector<byte> value, out int expireTime);
        int getLongBSExp(long keyItem, out vector<byte> value, out int expireTime);

        /**
         * 设置key-value。
	 *C++根据需要实现下面三个接口之一
         *
         */
        int setString(string keyItem, string value);
        int setInt(int keyItem, string value);
        int setLong(long keyItem, string value);

        /**
         * 设置key-value。
	 *JAVA根据需要实现下面三个接口之一
         *
         */
        int setStringBS(vector<byte> keyItem, vector<byte> value);
        int setIntBS(int keyItem, vector<byte> value);
        int setLongBS(long keyItem, vector<byte> value);

        /**
         * 删除key对应的值
         *JAVA和C++根据需要实现下面两个接口之一
         */
        int delString(string keyItem);
        int delInt(int keyItem);

	/**
         * 删除key对应的值
         *C++根据需要实现该接口
         */
        int delLong(long keyItem);

	/**
         * 删除key对应的值
         *JAVA根据需要实现该接口
         */
        int delStringBS(vector<byte> keyItem);


		//////////////////////////////////////////////////////////
		//二期接口
		/////////////////////////////////////////////////////////
		 /**
	* 从数据库查询记录
	* @param mainKey, 主key
	* @param field, 以","分隔的字段名，"*"表示查询所有字段
	* @param vtCond, 查询条件
	* @param vtData, 返回查询结果
	* 
	* @return int, 返回记录数, 0表示没有数据，< 0表示出错
	*/
        int select(string mainKey, string field, vector<DbCondition> vtCond, out vector<map<string, string> > vtData);
        int selectBS(vector<byte> mainKey, string field, vector<DbConditionBS> vtCond, out vector<map<string, vector<byte> > > vtData);

	/**
	* 更新数据库记录
	* @param mainKey, 主key
	* @param mpValue, 需要更新的字段
	* @param vtCond, 更新条件
	*
	* @return int, 返回更新的记录数, 0表示无影响，< 0表示出错
	*/
        int replace(string mainKey, map<string, DbUpdateValue> mpValue, vector<DbCondition> vtCond);
	    int replaceBS(vector<byte> mainKey, map<string, DbUpdateValueBS> mpValue, vector<DbConditionBS> vtCond);

	/**
	* 删除数据库记录
	* @param mainKey, 主key
	* @param vtCond, 删除条件
	* 
	* @return int, 返回删除的记录数, 0表示无影响，< 0表示出错
	*/
	    int del(string mainKey, vector<DbCondition> vtCond);
	    int delBS(vector<byte> mainKey, vector<DbConditionBS> vtCond);
    };
};