/**
* Tencent is pleased to support the open source community by making DCache available.
* Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
* Licensed under the BSD 3-Clause License (the "License"); you may not use this file
* except in compliance with the License. You may obtain a copy of the License at
*
* https://opensource.org/licenses/BSD-3-Clause
*
* Unless required by applicable law or agreed to in writing, software distributed under
* the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
* either express or implied. See the License for the specific language governing permissions
* and limitations under the License.
*/
#include "../TarsComm/ProxyShare.tars"

module DCache
{
interface MKCache
{

    /*********************************************************************
    *功能：Cache按主key查询，支持'and'条件匹配
    * return int: >=0 成功，其他失败
    *********************************************************************/
    int getMKV(GetMKVReq req, out GetMKVRsp rsp);

    /*********************************************************************
    *功能：Cache按主key批量数据查询，给定多个主key，用统一的条件进行匹配查询
    **********************************************************************/
    int getMKVBatch(MKVBatchReq req, out MKVBatchRsp rsp);

    /*********************************************************************
    *功能：Cache按主键批量查询
    **********************************************************************/
    int getMUKBatch(MUKBatchReq req, out MUKBatchRsp rsp);

    /*********************************************************************
    *功能：Cache按主key批量查询，针对每个主key支持'and'，'or'复杂条件匹配
    **********************************************************************/
    int getMKVBatchEx(MKVBatchExReq req, out MKVBatchExRsp rsp);

    /*********************************************************************
    *功能：获取主key下的记录数，返回值为正数时，为主key下记录数
    **********************************************************************/
    int getMainKeyCount(MainKeyReq req);

    /**
    *获取cache中所有的主key，不包含落地db的key
    *@return int,
    *	ET_SUCC  		：成功
    *   ET_SERVER_TYPE_ERR	：CacheServer的状态不对，一般情况是请求发送到SLAVE状态的server了
    *   ET_MODULE_NAME_INVALID	：业务模块不匹配，传入业务模块名和Cache服务的模块名不一致
    *	ET_SYS_ERR		：系统错误
    **********************************************************************/
    int getAllMainKey(GetAllKeysReq req, out GetAllKeysRsp rsp);

    int getSyncTime();
    int getDeleteTime();

    int getList(GetListReq req, out GetListRsp rsp);
    int getRangeList(GetRangeListReq req, out BatchEntry rsp);

    int getSet(GetSetReq req, out BatchEntry rsp);

    int getZSetScore(GetZsetScoreReq req, out double score);
    int getZSetPos(GetZsetPosReq req, out long pos);
    int getZSetByPos(GetZsetByPosReq req, out BatchEntry rsp);
    int getZSetByScore(GetZsetByScoreReq req, out BatchEntry rsp);
    //int getZSetBatch(GetZSetBatchReq req, out GetZSetBatchRsp rsp);
};
};

